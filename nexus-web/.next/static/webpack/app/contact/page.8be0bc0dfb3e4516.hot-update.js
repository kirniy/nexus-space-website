"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/contact/page",{

/***/ "(app-pages-browser)/./src/services/api.ts":
/*!*****************************!*\
  !*** ./src/services/api.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   api: function() { return /* binding */ api; }\n/* harmony export */ });\n// API service for NEXUS contact form submission\n// Uses Telegram bot for notifications\n// Helper function to create fetch with timeout\nconst fetchWithTimeout = async function(url, options) {\n    let timeout = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 8000;\n    const controller = new AbortController();\n    const timeoutId = setTimeout(()=>controller.abort(), timeout);\n    try {\n        const response = await fetch(url, {\n            ...options,\n            signal: controller.signal\n        });\n        clearTimeout(timeoutId);\n        return response;\n    } catch (error) {\n        clearTimeout(timeoutId);\n        if (error.name === \"AbortError\") {\n            throw new Error(\"Request timeout - please try again\");\n        }\n        throw error;\n    }\n};\nconst api = {\n    async submitContact (data) {\n        try {\n            const response = await fetchWithTimeout(\"/api/contact\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(data)\n            }, 8000);\n            const result = await response.json();\n            return result;\n        } catch (error) {\n            console.error(\"Error submitting contact form:\", error);\n            // Fallback response\n            return {\n                success: false,\n                message: \"Произошла ошибка. Пожалуйста, позвоните нам: +7 (921) 410-44-40\"\n            };\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9hcGkudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGdEQUFnRDtBQUNoRCxzQ0FBc0M7QUFZdEMsK0NBQStDO0FBQy9DLE1BQU1BLG1CQUFtQixlQUFPQyxLQUFhQztRQUFzQkMsMkVBQVU7SUFDM0UsTUFBTUMsYUFBYSxJQUFJQztJQUN2QixNQUFNQyxZQUFZQyxXQUFXLElBQU1ILFdBQVdJLEtBQUssSUFBSUw7SUFFdkQsSUFBSTtRQUNGLE1BQU1NLFdBQVcsTUFBTUMsTUFBTVQsS0FBSztZQUNoQyxHQUFHQyxPQUFPO1lBQ1ZTLFFBQVFQLFdBQVdPLE1BQU07UUFDM0I7UUFDQUMsYUFBYU47UUFDYixPQUFPRztJQUNULEVBQUUsT0FBT0ksT0FBWTtRQUNuQkQsYUFBYU47UUFDYixJQUFJTyxNQUFNQyxJQUFJLEtBQUssY0FBYztZQUMvQixNQUFNLElBQUlDLE1BQU07UUFDbEI7UUFDQSxNQUFNRjtJQUNSO0FBQ0Y7QUFFTyxNQUFNRyxNQUFNO0lBQ2pCLE1BQU1DLGVBQWNDLElBQWlCO1FBQ25DLElBQUk7WUFDRixNQUFNVCxXQUFXLE1BQU1ULGlCQUNyQixnQkFDQTtnQkFDRW1CLFFBQVE7Z0JBQ1JDLFNBQVM7b0JBQ1AsZ0JBQWdCO2dCQUNsQjtnQkFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDTDtZQUN2QixHQUNBO1lBR0YsTUFBTU0sU0FBUyxNQUFNZixTQUFTZ0IsSUFBSTtZQUNsQyxPQUFPRDtRQUVULEVBQUUsT0FBT1gsT0FBWTtZQUNuQmEsUUFBUWIsS0FBSyxDQUFDLGtDQUFrQ0E7WUFFaEQsb0JBQW9CO1lBQ3BCLE9BQU87Z0JBQ0xjLFNBQVM7Z0JBQ1RDLFNBQVM7WUFDWDtRQUNGO0lBQ0Y7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9zZXJ2aWNlcy9hcGkudHM/OTU2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBUEkgc2VydmljZSBmb3IgTkVYVVMgY29udGFjdCBmb3JtIHN1Ym1pc3Npb25cbi8vIFVzZXMgVGVsZWdyYW0gYm90IGZvciBub3RpZmljYXRpb25zXG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29udGFjdERhdGEge1xuICBuYW1lOiBzdHJpbmc7XG4gIHBob25lOiBzdHJpbmc7XG4gIGVtYWlsOiBzdHJpbmc7XG4gIG1lc3NhZ2U6IHN0cmluZztcbiAgZXZlbnREYXRlPzogc3RyaW5nO1xuICBldmVudFR5cGU/OiBzdHJpbmc7XG4gIGd1ZXN0cz86IHN0cmluZztcbn1cblxuLy8gSGVscGVyIGZ1bmN0aW9uIHRvIGNyZWF0ZSBmZXRjaCB3aXRoIHRpbWVvdXRcbmNvbnN0IGZldGNoV2l0aFRpbWVvdXQgPSBhc3luYyAodXJsOiBzdHJpbmcsIG9wdGlvbnM6IFJlcXVlc3RJbml0LCB0aW1lb3V0ID0gODAwMCkgPT4ge1xuICBjb25zdCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICBjb25zdCB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IGNvbnRyb2xsZXIuYWJvcnQoKSwgdGltZW91dCk7XG5cbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgLi4ub3B0aW9ucyxcbiAgICAgIHNpZ25hbDogY29udHJvbGxlci5zaWduYWxcbiAgICB9KTtcbiAgICBjbGVhclRpbWVvdXQodGltZW91dElkKTtcbiAgICByZXR1cm4gcmVzcG9uc2U7XG4gIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICBjbGVhclRpbWVvdXQodGltZW91dElkKTtcbiAgICBpZiAoZXJyb3IubmFtZSA9PT0gJ0Fib3J0RXJyb3InKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1JlcXVlc3QgdGltZW91dCAtIHBsZWFzZSB0cnkgYWdhaW4nKTtcbiAgICB9XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBhcGkgPSB7XG4gIGFzeW5jIHN1Ym1pdENvbnRhY3QoZGF0YTogQ29udGFjdERhdGEpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbjsgbWVzc2FnZT86IHN0cmluZyB9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2hXaXRoVGltZW91dChcbiAgICAgICAgJy9hcGkvY29udGFjdCcsXG4gICAgICAgIHtcbiAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSlcbiAgICAgICAgfSxcbiAgICAgICAgODAwMFxuICAgICAgKTtcblxuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcblxuICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHN1Ym1pdHRpbmcgY29udGFjdCBmb3JtOicsIGVycm9yKTtcblxuICAgICAgLy8gRmFsbGJhY2sgcmVzcG9uc2VcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiAn0J/RgNC+0LjQt9C+0YjQu9CwINC+0YjQuNCx0LrQsC4g0J/QvtC20LDQu9GD0LnRgdGC0LAsINC/0L7Qt9Cy0L7QvdC40YLQtSDQvdCw0Lw6ICs3ICg5MjEpIDQxMC00NC00MCdcbiAgICAgIH07XG4gICAgfVxuICB9XG59OyJdLCJuYW1lcyI6WyJmZXRjaFdpdGhUaW1lb3V0IiwidXJsIiwib3B0aW9ucyIsInRpbWVvdXQiLCJjb250cm9sbGVyIiwiQWJvcnRDb250cm9sbGVyIiwidGltZW91dElkIiwic2V0VGltZW91dCIsImFib3J0IiwicmVzcG9uc2UiLCJmZXRjaCIsInNpZ25hbCIsImNsZWFyVGltZW91dCIsImVycm9yIiwibmFtZSIsIkVycm9yIiwiYXBpIiwic3VibWl0Q29udGFjdCIsImRhdGEiLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZXN1bHQiLCJqc29uIiwiY29uc29sZSIsInN1Y2Nlc3MiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/api.ts\n"));

/***/ })

});